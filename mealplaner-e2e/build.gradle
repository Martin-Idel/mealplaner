apply plugin: "java"

dependencies {
    testImplementation group: "org.slf4j", name: "slf4j-api", version: "${slf4jVersion}"
    testImplementation group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "${log4jVersion}"
    testImplementation group: "org.apache.logging.log4j", name: "log4j-api", version: "${log4jVersion}"
    testImplementation group: "org.apache.logging.log4j", name: "log4j-core", version: "${log4jVersion}"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: "${jupyterVersion}"
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: "${jupyterPlatformVersion}"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: "${assertjVersion}"
    testImplementation group: "org.assertj", name: "assertj-swing-junit", version: "${assertjSwingVersion}"
    testImplementation project(":mealplaner-commons")
    testImplementation project(":mealplaner-gui-commons")
    testImplementation project(":mealplaner-model")
    testImplementation project(":mealplaner-core")
    testImplementation project(":mealplaner-gui")
    testImplementation project(":mealplaner-plugins:comment")
    testImplementation project(":mealplaner-plugins:cookingtime")
    testImplementation project(":mealplaner-plugins:courses")
    testImplementation project(":mealplaner-plugins:preference")
    testImplementation project(":mealplaner-plugins:sidedish")
    testImplementation project(":mealplaner-plugins:utensil")
    testImplementation(testFixtures(project(":mealplaner-core")))
}

sourceSets {
    test {
        java {
            srcDirs "src/test/java"
        }
    }
}

test {
    useJUnitPlatform()
    if(! Boolean.parseBoolean(System.getProperty("rune2etests").toString())) {
        exclude '**/guitests/**'
    }
}
