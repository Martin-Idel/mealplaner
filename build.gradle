buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.spotbugs:spotbugs-gradle-plugin:3.0.0"
    }
}

// TODO: wrong formatting of German resource files
// TODO: split property files & tests
// TODO: This is probably irrelevant
apply plugin: "java"

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    version = '2.1.0-SNAPSHOT'
}

ext {
    slf4jVersion = '1.7.30'
    log4jVersion = '2.13.0'
    jaxbVersion = '2.4.0-b180830.0359'
    jaxbRuntime = '2.4.0-b180830.0438'
    swingxVersion = '1.6.5-1'

    jupyterVersion = '5.5.2'
    jupyterPlatformVersion = '1.5.2'
    assertjVersion = '3.14.0'
    mockitoVersion = '3.2.4'
    assertjSwingVersion = '3.9.2'
}

task copyLicenses(type: Copy) {
	into "build/libs/licenses/"
	from "licenses/"
}

subprojects {
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion = "8.28"
        ignoreFailures = false
    }

    tasks.withType(Checkstyle).each { checkstyleTask ->
        checkstyleTask.doLast {
            reports.all { report ->
                def outputFile = report.destination
                if (outputFile.exists() && outputFile.text.contains("<error ")) {
                    throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'pmd'
    pmd {
        toolVersion = "5.8.1"
        ignoreFailures = false
        reportsDir = file("$project.buildDir/reports/pmd")
        ruleSets = [
                "java-basic",
                "java-braces",
                "java-clone",
                "java-empty",
                "java-finalizers",
                "java-strictexception",
                "java-sunsecure",
                "java-typeresolution",
                "java-unnecessary",
                "java-unusedcode",
                "java-design",
        ]
    }
}

subprojects {
    apply plugin: 'com.github.spotbugs'
    spotbugs {
        toolVersion = "3.1.12"
        ignoreFailures = false
        effort = "max"
        excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
    }
}
