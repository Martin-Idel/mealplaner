
apply plugin: "java"
apply plugin: "application"
apply plugin: "eclipse"

apply plugin: "checkstyle"
apply plugin: "pmd"
apply plugin: "findbugs"

repositories {
    jcenter()
    mavenCentral()
}

configurations {
	runtimeLibraries
}

dependencies {
    compile "org.slf4j:slf4j-api:1.7.22"
    compile "org.swinglabs.swingx:swingx-all:1.6.5-1"
    compile group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "2.9.1"
    compile group: "org.apache.logging.log4j", name: "log4j-api", version: "2.9.1"
    compile group: "org.apache.logging.log4j", name: "log4j-core", version: "2.9.1"

    testCompile "org.assertj:assertj-core:3.8.0"
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.10.19"
    
    runtime "org.swinglabs.swingx:swingx-all:1.6.5-1"
    configurations.runtimeLibraries.extendsFrom(configurations.runtime)
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
        }
        resources {
        	srcDirs "src/test/resources"
        }
    }
    
    test {
    	java {
    		srcDirs "src/test/java"
    	}
    }
}
 
 test {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    
    afterSuite { desc, result ->
    	if (!desc.parent) {
        	println "Test results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
		}
	}
}

checkstyle {
    toolVersion = "8.5"
    ignoreFailures = false
}

pmd {
	toolVersion = "5.8.1"
	ignoreFailures = false
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSets = [
        "java-basic",
        "java-braces",
// TODO: Reenable once XML is switched to JAXB
        // "java-coupling",        
        "java-clone",
        "java-empty",
        "java-finalizers",
// TODO: Use once XML is switched to JAXB
        // "java-strictexception",
        "java-sunsecure",        
        "java-typeresolution",
        "java-unnecessary",
        "java-unusedcode",
        "java-design",     
		]
}

findbugs {
	toolVersion = "3.0.1"
	ignoreFailures = false
	effort = "max"
}

mainClassName = "mealplaner.Kochplaner"

jar {
	manifest {
		attributes(
			"Manifest-Version": "1.0",
			"Main-Class": "mealplaner.Kochplaner"
		)
	}
	
	from {
		configurations.runtimeLibraries.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}