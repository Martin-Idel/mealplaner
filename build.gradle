buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.spotbugs:spotbugs-gradle-plugin:3.0.0"
    }
}

plugins {
    id "org.sonarqube" version "2.8"
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    version = '2.1.3-SNAPSHOT'
}

ext {
    slf4jVersion = '1.7.32'
    log4jVersion = '2.15.0'
    jaxbVersion = '2.4.0-b180830.0359'
    jaxbRuntime = '2.4.0-b180830.0438'
    swingxVersion = '1.6.5-1'

    jupyterVersion = '5.8.2'
    jupyterPlatformVersion = '1.8.2'
    assertjVersion = '3.21.0'
    mockitoVersion = '4.1.0'
    assertjSwingVersion = '3.17.1'
    eqVerVersion = '3.1.11'
}

subprojects {
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion = "8.29"
        ignoreFailures = false
    }

    tasks.withType(Checkstyle).each { checkstyleTask ->
        checkstyleTask.doLast {
            reports.all { report ->
                def outputFile = report.destination
                if (outputFile.exists() && outputFile.text.contains("<error ")) {
                    throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'pmd'
    pmd {
        toolVersion = "6.21.0"
        ignoreFailures = false
        reportsDir = file("$project.buildDir/reports/pmd")
        ruleSets = []
        ruleSetFiles = files(
                "$rootProject.projectDir/config/pmd/rulesets.xml",
                "$rootProject.projectDir/config/pmd/rulesets-tests.xml"
        )
    }
}

subprojects {
    apply plugin: 'com.github.spotbugs'
    spotbugs {
        toolVersion = "3.1.12"
        ignoreFailures = false
        effort = "max"
        excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
    }
}

subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'java'

    jacoco {
        toolVersion = "0.8.5"
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "Martin-Idel_mealplaner"
        property "sonar.organization", "db6325a72edfe68173ffc6f44eb2b28a219c24f6899c4e7dc6595c3eadf9fcb4"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "a67374f1a27e906ec29af1a22cc63b745147c93c"
    }
}
